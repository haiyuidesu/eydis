#ifndef REGISTERS_H
#define REGISTERS_H

#ifdef __cplusplus
extern "C" {
#endif

// https://developer.arm.com/docs/ddi0595/b/aarch64-system-registers
// https://gist.github.com/bazad/42054285391c6e0dcd0ede4b5f969ad2

static struct {
  char *reg;
  char *name;
  char *definition;
} system_registers_common[] = {
  /* arm64 registers */
  { "s3_4_c15_c1_0", "kernelkeylo_el1", "PAC kernel key (bits[63:0])" },
  { "s3_4_c15_c1_1", "kernelkeyhi_el1", "PAC kernel key (bits[127:64])" },
  { "s3_4_c15_c1_2", "vmsa_lockdown_el1", "vmsa lockdown" },
  { "s3_4_c15_c1_6", "ktrr_b_upper_el1", "ktrr upper range b" },
  { "s3_4_c15_c1_7", "ktrr_b_lower_el1", "ktrr lower range b" },
  { "s3_4_c15_c2_0", "aprr0_el1", "aprr register 0" },
  { "s3_4_c15_c2_1", "aprr1_el1", "aprr register 1" },
  { "s3_4_c15_c2_2", "ktrr_lock_el1", "ktrr lockdown" },
  { "s3_4_c15_c2_3", "ktrr_lower_el1", "ktrr lower range" },
  { "s3_4_c15_c2_4", "ktrr_upper_el1", "ktrr upper range" },
  { "s3_4_c15_c2_5", "ktrr_ctl_el1", "ktrr control register" },
  { "s3_4_c15_c2_6", "aprr6_el1", "aprr register 6" },
  { "s3_4_c15_c2_7", "aprr7_el1", "aprr register 7" },
  { "s3_0_c4_c2_0", "spsel", "stack pointer select" },
  { "s3_0_c2_c0_0", "ttbr0_el1", "translation table base register 0 (el1)" },
  { "s1_0_c7_c1_0", "ialluis", "instruction cache invalidate all to pou, inner shareable" },
  { "s1_0_c7_c5_0", "iallu", "instruction cache invalidate all to pou" },
  { "s1_0_c7_c6_1", "ivac", "data or unified cache line invalidate by va to poc" },
  { "s1_0_c7_c6_2", "isw", "data or unified cache line invalidate by set/way" },
  { "s1_0_c7_c6_3", "igvac", "data, allocation tag or unified cache line invalidate of allocation tags by va to poc" },
  { "s1_0_c7_c6_4", "igsw", "data, allocation tag or unified cache line invalidate of allocation tags by set/way" },
  { "s1_0_c7_c6_5", "igdvac", "data, allocation tag or unified cache line invalidate of allocation tags by va to poc" },
  { "s1_0_c7_c6_6", "igdsw", "data, allocation tag or unified cache line invalidate of data and allocation tags by set/way" },
  { "s1_0_c7_c8_0", "s1e1r", "address translate stage 1 el1 read" },
  { "s1_0_c7_c8_1", "s1e1w", "address translate stage 1 el1 write" },
  { "s1_0_c7_c8_2", "s1e0r", "address translate stage 1 el0 read" },
  { "s1_0_c7_c8_3", "s1e0w", "address translate stage 1 el0 write" },
  { "s1_0_c7_c9_0", "s1e1rp", "address translate stage 1 el1 read pan" },
  { "s1_0_c7_c9_1", "s1e1wp", "address translate stage 1 el1 write pan" },
  { "s1_0_c7_c10_2", "csw", "data or unified cache line clean by set/way" },
  { "s1_0_c7_c10_4", "cgsw", "data, allocation tag or unified cache line clean of allocation tags by set/way" },
  { "s1_0_c7_c10_6", "cgdsw", "data, allocation tag or unified cache line clean of data and allocation tags by set/way" },
  { "s1_0_c7_c14_2", "cisw", "data or unified cache line clean and invalidate by set/way" },
  { "s1_0_c7_c14_4", "cigsw", "data, allocation tag or unified cache line clean and invalidate of allocation tags by set/way" },
  { "s1_0_c7_c14_6", "cigdsw", "data, allocation tag or unified cache line clean and invalidate of data and allocation tags by set/way" },
  { "s1_0_c8_c1_0", "vmalle1os", "tlb invalidate by vmid, all at stage 1, el1, outer shareable" },
  { "s1_0_c8_c1_1", "vae1os", "tlb invalidate by va, el1, outer shareable" },
  { "s1_0_c8_c1_2", "aside1os", "tlb invalidate by asid, el1, outer shareable" },
  { "s1_0_c8_c1_3", "vaae1os", "tlb invalidate by va, all asid, el1, outer shareable" },
  { "s1_0_c8_c1_5", "vale1os", "tlb invalidate by va, last level, el1, outer shareable" },
  { "s1_0_c8_c1_7", "vaale1os", "tlb invalidate by va, all asid, last level, el1, outer shareable" },
  { "s1_0_c8_c2_1", "rvae1is", "tlb range invalidate by va, el1, inner shareable" },
  { "s1_0_c8_c2_3", "rvaae1is", "tlb range invalidate by va, all asid, el1, inner shareable" },
  { "s1_0_c8_c2_5", "rvale1is", "tlb range invalidate by va, last level, el1, inner shareable" },
  { "s1_0_c8_c2_7", "rvaale1is", "tlb range invalidate by va, all asid, last level, el1, inner shareable" },
  { "s1_0_c8_c3_0", "vmalle1is", "tlb invalidate by vmid, all at stage 1, el1, inner shareable" },
  { "s1_0_c8_c3_1", "vae1is", "tlb invalidate by va, el1, inner shareable" },
  { "s1_0_c8_c3_2", "aside1is", "tlb invalidate by asid, el1, inner shareable" },
  { "s1_0_c8_c3_3", "vaae1is", "tlb invalidate by va, all asid, el1, inner shareable" },
  { "s1_0_c8_c3_5", "vale1is", "tlb invalidate by va, last level, el1, inner shareable" },
  { "s1_0_c8_c3_7", "vaale1is", "tlb invalidate by va, all asid, last level, el1, inner shareable" },
  { "s1_0_c8_c5_1", "rvae1os", "tlb range invalidate by va, el1, outer shareable" },
  { "s1_0_c8_c5_3", "rvaae1os", "tlb range invalidate by va, all asid, el1, outer shareable" },
  { "s1_0_c8_c5_5", "rvale1os", "tlb range invalidate by va, last level, el1, outer shareable" },
  { "s1_0_c8_c5_7", "rvaale1os", "tlb range invalidate by va, all asid, last level, el1, outer shareable" },
  { "s1_0_c8_c6_1", "rvae1", "tlb range invalidate by va, el1" },
  { "s1_0_c8_c6_3", "rvaae1", "tlb range invalidate by va, all asid, el1" },
  { "s1_0_c8_c6_5", "rvale1", "tlb range invalidate by va, last level, el1" },
  { "s1_0_c8_c6_7", "rvaale1", "tlb range invalidate by va, all asid, last level, el1" },
  { "s1_0_c8_c7_0", "vmalle1", "tlb invalidate by vmid, all at stage 1, el1" },
  { "s1_0_c8_c7_1", "vae1", "tlb invalidate by va, el1" },
  { "s1_0_c8_c7_2", "aside1", "tlb invalidate by asid, el1" },
  { "s1_0_c8_c7_3", "vaae1", "tlb invalidate by va, all asid, el1" },
  { "s1_0_c8_c7_5", "vale1", "tlb invalidate by va, last level, el1" },
  { "s1_0_c8_c7_7", "vaale1", "tlb invalidate by va, all asid, last level, el1" },
  { "s1_3_c7_c4_1", "zva", "data cache zero by va" },
  { "s1_3_c7_c4_3", "gva", "data cache set allocation tag by va" },
  { "s1_3_c7_c4_4", "gzva", "data cache set allocation tags and zero by va" },
  { "s1_3_c7_c5_1", "ivau", "instruction cache line invalidate by va to pou" },
  { "s1_3_c7_c10_1", "cvac", "data or unified cache line clean by va to poc" },
  { "s1_3_c7_c10_3", "cgvac", "data, allocation tag or unified cache line clean of allocation tags by va to poc" },
  { "s1_3_c7_c10_5", "cgdvac", "data, allocation tag or unified cache line clean of allocation tags by va to poc" },
  { "s1_3_c7_c11_1", "cvau", "data or unified cache line clean by va to pou" },
  { "s1_3_c7_c12_1", "cvap", "data or unified cache line clean by va to pop" },
  { "s1_3_c7_c12_3", "cgvap", "data, allocation tag or unified cache line clean of allocation tags by va to pop" },
  { "s1_3_c7_c12_5", "cgdvap", "data, allocation tag or unified cache line clean of data and allocation tags by va to pop" },
  { "s1_3_c7_c13_1", "cvadp", "data or unified cache line clean by va to podp" },
  { "s1_3_c7_c13_3", "cgvadp", "clean of allocation tags by va to podp" },
  { "s1_3_c7_c13_5", "cgdvadp", "data, allocation tag or unified cache line clean of allocation tags by va to podp" },
  { "s1_3_c7_c14_1", "civac", "data or unified cache line clean and invalidate by va to poc" },
  { "s1_4_c7_c8_0", "s1e2r", "address translate stage 1 el2 read" },
  { "s1_4_c7_c8_1", "s1e2w", "address translate stage 1 el2 write" },
  { "s1_4_c7_c8_4", "s12e1r", "address translate stages 1 and 2 el1 read" },
  { "s1_4_c7_c8_5", "s12e1w", "address translate stages 1 and 2 el1 write" },
  { "s1_4_c7_c8_6", "s12e0r", "address translate stages 1 and 2 el0 read" },
  { "s1_4_c7_c8_7", "s12e0w", "address translate stages 1 and 2 el0 write" },
  { "s1_4_c8_c0_1", "ipas2e1is", "tlb invalidate by intermediate physical address, stage 2, el1, inner shareable" },
  { "s1_4_c8_c0_2", "ripas2e1is", "tlb range invalidate by intermediate physical address, stage 2, el1, inner shareable" },
  { "s1_4_c8_c0_5", "ipas2le1is", "tlb invalidate by intermediate physical address, stage 2, last level, el1, inner shareable" },
  { "s1_4_c8_c0_6", "ripas2le1is", "tlb range invalidate by intermediate physical address, stage 2, last level, el1, inner shareable" },
  { "s1_4_c8_c1_0", "alle2os", "tlb invalidate all, el2, outer shareable" },
  { "s1_4_c8_c1_1", "vae2os", "tlb invalidate by va, el2, outer shareable" },
  { "s1_4_c8_c1_4", "alle1os", "tlb invalidate all, el1, outer shareable" },
  { "s1_4_c8_c1_5", "vale2os", "tlb invalidate by va, last level, el2, outer shareable" },
  { "s1_4_c8_c1_6", "vmalls12e1os", "tlb invalidate by vmid, all at stage 1 and 2, el1, outer shareable" },
  { "s1_4_c8_c2_1", "rvae2is", "tlb range invalidate by va, el2, inner shareable" },
  { "s1_4_c8_c2_5", "rvale2is", "tlb range invalidate by va, last level, el2, inner shareable" },
  { "s1_4_c8_c3_0", "alle2is", "tlb invalidate all, el2, inner shareable" },
  { "s1_4_c8_c3_1", "vae2is", "tlb invalidate by va, el2, inner shareable" },
  { "s1_4_c8_c3_4", "alle1is", "tlb invalidate all, el1, inner shareable" },
  { "s1_4_c8_c3_5", "vale2is", "tlb invalidate by va, last level, el2, inner shareable" },
  { "s1_4_c8_c3_6", "vmalls12e1is", "tlb invalidate by vmid, all at stage 1 and 2, el1, inner shareable" },
  { "s1_4_c8_c4_0", "ipas2e1os", "tlb invalidate by intermediate physical address, stage 2, el1, outer shareable" },
  { "s1_4_c8_c4_1", "ipas2e1", "tlb invalidate by intermediate physical address, stage 2, el1" },
  { "s1_4_c8_c4_2", "ripas2e1", "tlb range invalidate by intermediate physical address, stage 2, el1" },
  { "s1_4_c8_c4_3", "ripas2e1os", "tlb range invalidate by intermediate physical address, stage 2, el1, outer shareable" },
  { "s1_4_c8_c4_4", "ipas2le1os", "tlb invalidate by intermediate physical address, stage 2, last level, el1, outer shareable" },
  { "s1_4_c8_c4_5", "ipas2le1", "tlb invalidate by intermediate physical address, stage 2, last level, el1" },
  { "s1_4_c8_c4_6", "ripas2le1", "tlb range invalidate by intermediate physical address, stage 2, last level, el1" },
  { "s1_4_c8_c4_7", "ripas2le1os", "tlb range invalidate by intermediate physical address, stage 2, last level, el1, outer shareable" },
  { "s1_4_c8_c5_1", "rvae2os", "tlb range invalidate by va, el2, outer shareable" },
  { "s1_4_c8_c5_5", "rvale2os", "tlb range invalidate by va, last level, el2, outer shareable" },
  { "s1_4_c8_c6_1", "rvae2", "tlb range invalidate by va, el2" },
  { "s1_4_c8_c6_5", "rvale2", "tlb range invalidate by va, last level, el2" },
  { "s1_4_c8_c7_0", "alle2", "tlb invalidate all, el2" },
  { "s1_4_c8_c7_1", "vae2", "tlb invalidate by va, el2" },
  { "s1_4_c8_c7_4", "alle1", "tlb invalidate all, el1" },
  { "s1_4_c8_c7_5", "vale2", "tlb invalidate by va, last level, el2" },
  { "s1_4_c8_c7_6", "vmalls12e1", "tlb invalidate by vmid, all at stage 1 and 2, el1" },
  { "s1_6_c7_c8_0", "s1e3r", "address translate stage 1 el3 read" },
  { "s1_6_c7_c8_1", "s1e3w", "address translate stage 1 el3 write" },
  { "s1_6_c8_c1_0", "alle3os", "tlb invalidate all, el3, outer shareable" },
  { "s1_6_c8_c1_1", "vae3os", "tlb invalidate by va, el3, outer shareable" },
  { "s1_6_c8_c1_5", "vale3os", "tlb invalidate by va, last level, el3, outer shareable" },
  { "s1_6_c8_c2_1", "rvae3is", "tlb range invalidate by va, el3, inner shareable" },
  { "s1_6_c8_c2_5", "rvale3is", "tlb range invalidate by va, last level, el3, inner shareable" },
  { "s1_6_c8_c3_0", "alle3is", "tlb invalidate all, el3, inner shareable" },
  { "s1_6_c8_c3_1", "vae3is", "tlb invalidate by va, el3, inner shareable" },
  { "s1_6_c8_c3_5", "vale3is", "tlb invalidate by va, last level, el3, inner shareable" },
  { "s1_6_c8_c5_1", "rvae3os", "tlb range invalidate by va, el3, outer shareable" },
  { "s1_6_c8_c5_5", "rvale3os", "tlb range invalidate by va, last level, el3, outer shareable" },
  { "s1_6_c8_c6_1", "rvae3", "tlb range invalidate by va, el3" },
  { "s1_6_c8_c6_5", "rvale3", "tlb range invalidate by va, last level, el3" },
  { "s1_6_c8_c7_0", "alle3", "tlb invalidate all, el3" },
  { "s1_6_c8_c7_1", "vae3", "tlb invalidate by va, el3" },
  { "s1_6_c8_c7_5", "vale3", "tlb invalidate by va, last level, el3" },
  { "s2_0_c0_c0_2", "osdtrrx_el1", "os lock data transfer register, receive" },
  { "s2_0_c1_c0_0", "mdrar_el1", "monitor debug rom address register" },
  { "s3_0_c0_c0_0", "midr_el1", "main id register" },
  { "s3_0_c0_c0_5", "mpidr_el1", "multiprocessor affinity register" },
  { "s3_0_c0_c0_6", "revidr_el1", "revision id register" },
  { "s3_0_c0_c3_0", "mvfr0_el1", "aarch32 media and vfp feature register 0" },
  { "s3_0_c0_c3_1", "mvfr1_el1", "aarch32 media and vfp feature register 1" },
  { "s3_0_c0_c3_2", "mvfr2_el1", "aarch32 media and vfp feature register 2" },
  { "s3_0_c1_c0_0", "sctlr_el1", "system control register (el1)" },
  { "s3_0_c1_c0_1", "actlr_el1", "auxiliary control register (el1)" },
  { "s3_0_c1_c0_2", "cpacr_el1", "architectural feature access control register" },
  { "s3_0_c1_c0_5", "rgsr_el1", "random allocation tag seed register." },
  { "s3_0_c1_c0_6", "gcr_el1", "tag control register." },
  { "s3_0_c1_c2_0", "zcr_el1", "sve control register for el1" },
  { "s3_0_c1_c2_1", "trfcr_el1", "trace filter control register (el1)" },
  { "s3_0_c2_c0_1", "ttbr1_el1", "translation table base register 1 (el1)" },
  { "s3_0_c2_c0_2", "tcr_el1", "translation control register (el1)" },
  { "s3_0_c2_c1_0", "APIAKeyLo_el1", "pointer authentication key A for instruction (bits[63:0])" },
  { "s3_0_c2_c1_1", "APIAKeyHi_el1", "pointer authentication key A for instruction (bits[127:64])" },
  { "s3_0_c2_c1_2", "APIBKeyLo_el1", "pointer authentication key B for instruction (bits[63:0])" },
  { "s3_0_c2_c1_3", "APIBKeyHi_el1", "pointer authentication key B for instruction (bits[127:64])" },
  { "s3_0_c2_c2_0", "APDAKeyLo_el1", "pointer authentication key A for data (bits[63:0])" },
  { "s3_0_c2_c2_1", "APDAKeyHi_el1", "pointer authentication key A for data (bits[127:64])" },
  { "s3_0_c2_c2_2", "APDBKeyLo_el1", "pointer authentication key B for data (bits[63:0])" },
  { "s3_0_c2_c2_3", "APDBKeyHi_el1", "pointer authentication key B for data (bits[127:64])" },
  { "s3_0_c2_c3_0", "APGAKeyLo_el1", "pointer authentication key A for code (bits[63:0])" },
  { "s3_0_c2_c3_1", "APGAKeyHi_el1", "pointer authentication key A for code (bits[127:64])" },
  { "s3_0_c4_c0_0", "spsr_el1", "saved program status register (el1)" },
  { "s3_0_c4_c0_1", "elr_el1", "exception link register (el1)" },
  { "s3_0_c4_c1_0", "sp_el0", "stack pointer (el0)" },
  { "s3_0_c4_c2_2", "currentel", "current exception level" },
  { "s3_0_c4_c2_3", "pan", "privileged access never" },
  { "s3_0_c4_c2_4", "uao", "user access override" },
  { "s3_0_c4_c6_0", "icc_pmr_el1", "interrupt controller interrupt priority mask register" },
  { "s3_0_c4_c6_0", "icv_pmr_el1", "interrupt controller virtual interrupt priority mask register" },
  { "s3_0_c5_c1_0", "afsr0_el1", "auxiliary fault status register 0 (el1)" },
  { "s3_0_c5_c1_1", "afsr1_el1", "auxiliary fault status register 1 (el1)" },
  { "s3_0_c5_c2_0", "esr_el1", "exception syndrome register (el1)" },
  { "s3_0_c5_c3_0", "erridr_el1", "error record id register" },
  { "s3_0_c5_c3_1", "errselr_el1", "error record select register" },
  { "s3_0_c5_c6_0", "tfsr_el1", "tag fault status register (el1)" },
  { "s3_0_c5_c6_1", "tfsre0_el1", "tag fault status register (el0)." },
  { "s3_0_c6_c0_0", "far_el1", "fault address register (el1)" },
  { "s3_0_c7_c4_0", "par_el1", "physical address register" },
  { "s3_0_c9_c9_0", "pmscr_el1", "statistical profiling control register (el1)" },
  { "s3_0_c9_c9_2", "pmsicr_el1", "sampling interval counter register" },
  { "s3_0_c10_c2_0", "mair_el1", "memory attribute indirection register (el1)" },
  { "s3_0_c10_c3_0", "amair_el1", "auxiliary memory attribute indirection register (el1)" },
  { "s3_0_c10_c4_0", "lorsa_el1", "loregion start address (el1)" },
  { "s3_0_c10_c4_1", "lorea_el1", "loregion end address (el1)" },
  { "s3_0_c10_c4_2", "lorn_el1", "loregion number (el1)" },
  { "s3_0_c10_c4_3", "lorc_el1", "loregion control (el1)" },
  { "s3_0_c10_c4_4", "mpamidr_el1", "mpam id register (el1)" },
  { "s3_0_c10_c4_7", "lorid_el1", "loregionid (el1)" },
  { "s3_0_c10_c5_0", "mpam1_el1", "mpam1 register (el1)" },
  { "s3_0_c10_c5_1", "mpam0_el1", "mpam0 register (el1)" },
  { "s3_0_c12_c0_0", "vbar_el1", "vector base address register (el1)" },
  { "s3_0_c12_c0_1", "rvbar_el1", "reset vector base address register (if el2 and el3 not implemented)" },
  { "s3_0_c12_c0_2", "rmr_el1", "reset management register (el1)" },
  { "s3_0_c12_c1_0", "isr_el1", "interrupt status register" },
  { "s3_0_c12_c1_1", "disr_el1", "deferred interrupt status register" },
  { "s3_0_c13_c0_1", "contextidr_el1", "context id register (el1)" },
  { "s3_0_c13_c0_4", "tpidr_el1", "el1 software thread id register" },
  { "s3_0_c13_c0_7", "scxtnum_el1", "el1 read/write software context number" },
  { "s3_0_c14_c1_0", "cntkctl_el1", "counter-timer kernel control register" },
  { "s3_1_c0_c0_0", "ccsidr_el1", "current cache size id register" },
  { "s3_1_c0_c0_1", "clidr_el1", "cache level id register" },
  { "s3_1_c0_c0_2", "ccsidr2_el1", "current cache size id register 2" },
  { "s3_1_c0_c0_4", "gmid_el1", " multiple tag transfer id register" },
  { "s3_1_c0_c0_7", "aidr_el1", "auxiliary id register" },
  { "s3_2_c0_c0_0", "csselr_el1", "cache size selection register" },
  { "s3_3_c0_c0_1", "ctr_el0", "cache type register" },
  { "s3_3_c0_c0_7", "dczid_el0", "data cache zero id register" },
  { "s3_3_c2_c4_0", "rndr", "random number" },
  { "s3_3_c2_c4_1", "rndrrs", "reseeded random number" },
  { "s3_3_c4_c2_0", "nzcv", "condition flags" },
  { "s3_3_c4_c2_1", "daif", "interrupt mask bits" },
  { "s3_3_c4_c2_5", "dit", "data independent timing" },
  { "s3_3_c4_c2_6", "ssbs", "speculative store bypass safe" },
  { "s3_3_c4_c2_7", "tco", "tag check override" },
  { "s3_3_c4_c4_0", "fpcr", "floating-point control register" },
  { "s3_3_c4_c4_1", "fpsr", "floating-point status register" },
  { "s3_3_c4_c5_0", "dspsr_el0", "debug saved program status register" },
  { "s3_3_c4_c5_1", "dlr_el0", "debug link register" },
  { "s3_3_c9_c12_0", "pmcr_el0", "performance monitors control register" },
  { "s3_3_c13_c0_2", "tpidr_el0", "el0 read/write software thread id register" },
  { "s3_3_c13_c0_3", "tpidrro_el0", "el0 read-only software thread id register" },
  { "s3_3_c13_c0_7", "scxtnum_el0", "el0 read/write software context number" },
  { "s3_3_c13_c2_0", "amcr_el0", "activity monitors control register" },
  { "s3_3_c14_c0_0", "cntfrq_el0", "counter-timer frequency register" },
  { "s3_3_c14_c0_1", "cntpct_el0", "counter-timer physical count register" },
  { "s3_3_c14_c0_2", "cntvct_el0", "counter-timer virtual count register" },
  { "s3_3_c14_c2_0", "cntp_tval_el0", "counter-timer physical timer timervalue register" },
  { "s3_3_c14_c2_1", "cntp_ctl_el0", "counter-timer physical timer control register" },
  { "s3_3_c14_c2_2", "cntp_cval_el0", "counter-timer physical timer comparevalue register" },
  { "s3_3_c14_c3_0", "cntv_tval_el0", "counter-timer virtual timer timervalue register" },
  { "s3_3_c14_c3_1", "cntv_ctl_el0", "counter-timer virtual timer control register" },
  { "s3_3_c14_c3_2", "cntv_cval_el0", "counter-timer virtual timer comparevalue register" },
  { "s3_3_c14_c15_7", "pmccfiltr_el0", "performance monitors cycle count filter register" },
  { "s3_3_c14_c15_7", "pmevtyper31_el0", "performance monitors event type register 31" },
  { "s3_6_c1_c0_0", "sctlr_el3", "system control register (el3)" },
  { "s3_6_c1_c0_1", "actlr_el3", "auxiliary control register (el3)" },
  { "s3_6_c1_c1_0", "scr_el3", "secure configuration register" },
  { "s3_6_c1_c1_1", "sder32_el3", "aarch32 secure debug enable register" },
  { "s3_6_c1_c1_2", "cptr_el3", "architectural feature trap register (el3)" },
  { "s3_6_c1_c2_0", "zcr_el3", "sve control register for el3" },
  { "s3_6_c1_c3_1", "mdcr_el3", "monitor debug configuration register (el3)" },
  { "s3_6_c2_c0_0", "ttbr0_el3", "translation table base register 0 (el3)" },
  { "s3_6_c2_c0_2", "tcr_el3", "translation control register (el3)" },
  { "s3_6_c4_c0_0", "spsr_el3", "saved program status register (el3)" },
  { "s3_6_c4_c0_1", "elr_el3", "exception link register (el3)" },
  { "s3_6_c5_c1_0", "afsr0_el3", "auxiliary fault status register 0 (el3)" },
  { "s3_6_c5_c1_1", "afsr1_el3", "auxiliary fault status register 1 (el3)" },
  { "s3_6_c5_c2_0", "esr_el3", "exception syndrome register (el3)" },
  { "s3_6_c5_c6_0", "tfsr_el3", "tag fault status register (el3)" },
  { "s3_6_c6_c0_0", "far_el3", "fault address register (el3)" },
  { "s3_6_c10_c2_0", "mair_el3", "memory attribute indirection register (el3)" },
  { "s3_6_c10_c3_0", "amair_el3", "auxiliary memory attribute indirection register (el3)" },
  { "s3_6_c10_c5_0", "mpam3_el3", "mpam3 register (el3)" },
  { "s3_6_c12_c0_0", "vbar_el3", "vector base address register (el3)" },
  { "s3_6_c12_c0_1", "rvbar_el3", "reset vector base address register (if el3 implemented)" },
  { "s3_6_c12_c0_2", "rmr_el3", "reset management register (el3)" },
  { "s3_6_c13_c0_2", "tpidr_el3", "el3 software thread id register" },
  { "s3_6_c13_c0_7", "scxtnum_el3", "el3 read/write software context number" },
  { "s3_7_c14_c2_0", "cntps_tval_el1", "counter-timer physical secure timer timervalue register" },
  { "s3_7_c14_c2_1", "cntps_ctl_el1", "counter-timer physical secure timer control register" },
  { "s3_7_c14_c2_2", "cntps_cval_el1", "counter-timer physical secure timer comparevalue register" },

  { NULL, NULL, NULL },
};

#ifdef __cplusplus
}
#endif

#endif